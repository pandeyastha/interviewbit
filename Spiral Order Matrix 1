vector<int> Solution::spiralOrder(const vector<vector<int> > &A) {
    
    
        if(A.size()==0 ) return {};
        if(A.size()==1 ) return A[0];
        int left=0;
        int right=A[0].size()-1;
        int up=0;
        int down=A.size()-1;
        int dir=0;
        vector<int>v;
        while(left<=right && up<=down){
            if(dir%4==0){
                for(int i=left;i<=right;i++)
                    v.push_back(A[up][i]);
                dir++;
                up++;
            }
            else if( dir%4==1){
                for(int i=up;i<=down;i++)
                    v.push_back(A[i][right]);
                dir++;
                right--;
            }
            else if(dir%4==2){
                for(int i=right;i>=left;i--)
                    v.push_back(A[down][i]);
                dir++;
                down--;
            }
            else if(dir%4==3){
                for(int i=down;i>=up;i--)
                    v.push_back(A[i][left]);
                dir++;
                left++;
            }            
        }
        return v;
        
    
}
