bool cycleBfs(int i,vector<bool>&vis,vector<vector<int>>adj){
    queue<pair<int,int>>q;
    q.push({i,-1});
    vis[i]=1;
    while(!q.empty()){
     pair<int,int>tempPair= q.front();
     q.pop();
     for(auto x:adj[tempPair.first]){
         if(!vis[x]){
             vis[x]=1;
             q.push({x,tempPair.first});
         }
         else{
             if(x!=tempPair.second) return 1;
         }
     }
    }
    return 0;

}

int Solution::solve(int A, vector<vector<int> > &B) {
    vector<bool>vis(A+1,0);
    vector<vector<int>>adj(A+1);
    for(auto x: B){
        adj[x[0]].push_back(x[1]);
        adj[x[1]].push_back(x[0]);
    }
    for(int i=1;i<=A;i++)
    {
        if(!vis[i]){
            if(cycleBfs(i,vis,adj)) return 1;
        }
    }
    return 0;
}
